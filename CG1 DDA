/*1) Implement DDA line drawing algorithm to draw Simple line. Divide the
 screen in four quadrants with center as (0, 0). The line should work for all the
 slopes
*/
 #include<GL/glut.h>
 #include<iostream>
 #include<cmath>
 using namespace std;
 void init()
 {
 glClearColor(1.0,1.0,1.0,1.0);
 glMatrixMode(GL_PROJECTION);
 gluOrtho2D(-320,320,-240,240);
 }
 void drawAxes()
 {
 glColor3f(0.0,0.0,0.0);
 glBegin(GL_LINES);
 glVertex2d(-320,0);
 glVertex2d(320,0);
 glVertex2d(0,-240);
 glVertex2d(0,240);
 glEnd();
 }
 void dda(int x1,int y1,int x2,int y2){
 float dx=x2-x1;
 float dy=y2-y1;
 int steps= abs(dx)>abs(dy)?abs(dx):abs(dy);
 float xinc=dx/steps;
 float yinc=dy/steps;
 glColor3f(1.0,0.0,0.0);
 glBegin(GL_POINTS);
 for(int i=0; i<=steps; i++){
 glVertex2d(round(x1),round(y1));
 x1+=xinc;
 y1+=yinc;
 }
 glEnd();
 }
void display()
 {
 glClear(GL_COLOR_BUFFER_BIT);
 drawAxes();
 int x1,y1, x2, y2;
 cout<<"Enter the x1 y1 x2 y2:";
 cin>>x1>>y1>>x2>>y2;
 dda(x1,y1,x2,y2);
 glFlush();
 }
 int main(int argc,char**argv)
 {
 glutInit(&argc,argv);
 glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
 glutInitWindowSize(640,480);
 glutInitWindowPosition(100,100);
 glutCreateWindow("DDA Line Drawing");
 init();
 glutDisplayFunc(display);
 glutMainLoop();
 return 0;
 }
