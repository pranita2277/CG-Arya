/*4) Implement Bresenham circle drawing algorithm to draw any object. The
 object should be displayed in all the quadrants with respect to center and radius
*/
 #include <GL/glut.h>
#include <iostream>
 #include <cmath>
 // Draw a pixel at symmetric 8 points around the circle
 void plotCirclePoints(int xc, int yc, int x, int y) {
 glBegin(GL_POINTS);
 glVertex2i(xc + x, yc + y);
 glVertex2i(xc- x, yc + y);
 glVertex2i(xc + x, yc- y);
 glVertex2i(xc- x, yc- y);
 glVertex2i(xc + y, yc + x);
 glVertex2i(xc- y, yc + x);
 glVertex2i(xc + y, yc- x);
 glVertex2i(xc- y, yc- x);
 glEnd();
 }
 // Bresenhamâ€™s Circle Drawing Algorithm
 void drawCircle(int xc, int yc, int r) {
 int x = 0, y = r;
 int d = 3- 2 * r;
 while (x <= y) {
 plotCirclePoints(xc, yc, x, y);
 if (d < 0)
 d =d+4*x+6;
 else {
 d =d+4*(x-y) +10;
 y--;
 }
 x++;
 }
 }
 // Draw coordinate axes
 void drawAxes() {
 glColor3f(1.0, 0.0, 0.0); // X-axis in red
 for (int i =-500; i <= 500; i++) {
 glBegin(GL_POINTS);
 glVertex2i(i, 0);
 glEnd();
 }
 glColor3f(0.0, 1.0, 0.0); // Y-axis in green
 for (int i =-500; i <= 500; i++) {
 glBegin(GL_POINTS);
 glVertex2i(0, i);
 glEnd();
 }
 }
// Draw a flower-like object using multiple circles
 void drawObject(int xc, int yc, int r) {
 glColor3f(0.0, 0.0, 1.0); // Blue circles
 drawCircle(xc, yc, r);
 drawCircle(xc + r, yc, r);
 drawCircle(xc- r, yc, r);
 drawCircle(xc, yc + r, r);
 drawCircle(xc, yc- r, r);
 }
 // Display callback
 void display() {
 // Center circle
 // Right petal
 // Left petal
 // Top petal
 // Bottom petal
 glClear(GL_COLOR_BUFFER_BIT);
 drawAxes();
 int radius = 40;
 // Draw object in all 4 quadrants
 drawObject( 100, 100, radius); // Quadrant I
 drawObject(-100, 100, radius); // Quadrant II
 drawObject(-100,-100, radius); // Quadrant III
 drawObject( 100,-100, radius); // Quadrant IV
 glFlush();
 }
 // Initialization
 void init() {
 glClearColor(1, 1, 1, 1); // White background
 glColor3f(0, 0, 0);
 glPointSize(2.0);
 // Default drawing color
 glMatrixMode(GL_PROJECTION);
 gluOrtho2D(-500, 500,-500, 500); // Center at (0, 0)
 }
 int main(int argc, char** argv) {
 glutInit(&argc, argv);
 glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
 glutInitWindowSize(800, 800);
 glutCreateWindow("Bresenham Circle Drawing- Object in All Quadrants");
 init();
 glutDisplayFunc(display);
 glutMainLoop();
 return 0;
 }
